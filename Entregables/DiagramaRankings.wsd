@startuml GenerarRankings



abstract RankingEntidadesQueUsanIncidentes implements RankingEntidades{
    + generarRanking(List<Entidad>): List<Entidad>
    - obtenerIncidenteDeEntidad(Entidad): List<Incidente>
    - validarIncidente(Incidente): Boolean
}

class RankingMayorCantidad extends RankingEntidadesQueUsanIncidentes {
    - validarIncidente(Incidente): Boolean 
    + generarRanking(List<Entidad>): List<Entidad>
}

note left of RankingMayorCantidad::validarIncidente
    Es es lo que cambia lo de solo uno en 24 horas
end note



class RankingMayorTiempo extends RankingEntidadesQueUsanIncidentes {
    - calcularPromedio(Entidad): float
    + generarRanking(List<Entidad>): List<Entidad>
}

class RankingImpacto implements RankingComunidades {
    + generarRanking(List<Comunidad>): List<Comunidad>
    - calcularImpacto(Comunidad): float
}

interface RankingEntidades {
    + generarRanking(List<Entidad>): List<Entidad>
}

interface RankingComunidades {
    + generarRanking(List<Comunidad>): List<Comunidad>
}


@enduml
